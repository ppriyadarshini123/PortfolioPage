/*!
 * @pixi/canvas-mesh - v5.2.0
 * Compiled Wed, 06 Nov 2019 02:32:43 UTC
 *
 * @pixi/canvas-mesh is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
this.PIXI=this.PIXI||{};var _pixi_canvas_mesh=function(t,e,r,a,i,s){"use strict";var n=function(t){this.renderer=t};return n.prototype.render=function(t){var r=this.renderer,a=r.context,i=t.worldTransform,s=r.resolution;t.roundPixels?a.setTransform(i.a*s,i.b*s,i.c*s,i.d*s,i.tx*s|0,i.ty*s|0):a.setTransform(i.a*s,i.b*s,i.c*s,i.d*s,i.tx*s,i.ty*s),r.context.globalAlpha=t.worldAlpha,r.setBlendMode(t.blendMode),t.drawMode!==e.DRAW_MODES.TRIANGLES?this._renderTriangleMesh(t):this._renderTriangles(t)},n.prototype._renderTriangleMesh=function(t){for(var e=t.geometry.buffers[0].data.length,r=0;r<e-2;r++){var a=2*r;this._renderDrawTriangle(t,a,a+2,a+4)}},n.prototype._renderTriangles=function(t){for(var e=t.geometry.getIndex().data,r=e.length,a=0;a<r;a+=3){var i=2*e[a],s=2*e[a+1],n=2*e[a+2];this._renderDrawTriangle(t,i,s,n)}},n.prototype._renderDrawTriangle=function(t,e,r,a){var i=this.renderer.context,s=t.geometry.buffers[0].data,n=t.uvs,h=t.texture;if(h.valid){var o=h.baseTexture,d=o.getDrawableSource(),l=o.width,v=o.height,c=n[e]*o.width,u=n[r]*o.width,p=n[a]*o.width,g=n[e+1]*o.height,f=n[r+1]*o.height,_=n[a+1]*o.height,m=s[e],y=s[r],x=s[a],M=s[e+1],P=s[r+1],T=s[a+1],b=t.canvasPadding/this.renderer.resolution;if(b>0){var I=b/Math.abs(t.worldTransform.a),w=b/Math.abs(t.worldTransform.d),C=(m+y+x)/3,S=(M+P+T)/3,A=m-C,D=M-S,U=Math.sqrt(A*A+D*D);m=C+A/U*(U+I),M=S+D/U*(U+w),D=P-S,y=C+(A=y-C)/(U=Math.sqrt(A*A+D*D))*(U+I),P=S+D/U*(U+w),D=T-S,x=C+(A=x-C)/(U=Math.sqrt(A*A+D*D))*(U+I),T=S+D/U*(U+w)}i.save(),i.beginPath(),i.moveTo(m,M),i.lineTo(y,P),i.lineTo(x,T),i.closePath(),i.clip();var N=c*f+g*p+u*_-f*p-g*u-c*_,X=m*f+g*x+y*_-f*x-g*y-m*_,B=c*y+m*p+u*x-y*p-m*u-c*x,E=c*f*x+g*y*p+m*u*_-m*f*p-g*u*x-c*y*_,H=M*f+g*T+P*_-f*T-g*P-M*_,R=c*P+M*p+u*T-P*p-M*u-c*T,V=c*f*T+g*P*p+M*u*_-M*f*p-g*u*T-c*P*_;i.transform(X/N,H/N,B/N,R/N,E/N,V/N),i.drawImage(d,0,0,l*o.resolution,v*o.resolution,0,0,l,v),i.restore(),this.renderer.invalidateBlendMode()}},n.prototype.renderMeshFlat=function(t){var e=this.renderer.context,r=t.geometry.getBuffer("aVertexPosition").data,a=r.length/2;e.beginPath();for(var i=1;i<a-2;++i){var s=2*i,n=r[s],h=r[s+1],o=r[s+2],d=r[s+3],l=r[s+4],v=r[s+5];e.moveTo(n,h),e.lineTo(o,d),e.lineTo(l,v)}e.fillStyle="#FF0000",e.fill(),e.closePath()},n.prototype.destroy=function(){this.renderer=null},r.settings.MESH_CANVAS_PADDING=0,a.MeshMaterial.prototype._renderCanvas=function(t,e){t.plugins.mesh.render(e)},s.NineSlicePlane.prototype._cachedTint=16777215,s.NineSlicePlane.prototype._tintedCanvas=null,s.NineSlicePlane.prototype._canvasUvs=null,s.NineSlicePlane.prototype._renderCanvas=function(t){var e=t.context,r=this.worldTransform,a=t.resolution,s=16777215!==this.tint,n=this.texture;s&&this._cachedTint!==this.tint&&(this._cachedTint=this.tint,this._tintedCanvas=i.canvasUtils.getTintedCanvas(this,this.tint));var h=s?this._tintedCanvas:n.baseTexture.getDrawableSource();this._canvasUvs||(this._canvasUvs=[0,0,0,0,0,0,0,0]);var o=this.vertices,d=this._canvasUvs,l=s?0:n.frame.x,v=s?0:n.frame.y,c=l+n.frame.width,u=v+n.frame.height;d[0]=l,d[1]=l+this._leftWidth,d[2]=c-this._rightWidth,d[3]=c,d[4]=v,d[5]=v+this._topHeight,d[6]=u-this._bottomHeight,d[7]=u;for(var p=0;p<8;p++)d[p]*=n.baseTexture.resolution;e.globalAlpha=this.worldAlpha,t.setBlendMode(this.blendMode),this.roundPixels?e.setTransform(r.a*a,r.b*a,r.c*a,r.d*a,r.tx*a|0,r.ty*a|0):e.setTransform(r.a*a,r.b*a,r.c*a,r.d*a,r.tx*a,r.ty*a);for(var g=0;g<3;g++)for(var f=0;f<3;f++){var _=2*f+8*g,m=Math.max(1,d[f+1]-d[f]),y=Math.max(1,d[g+5]-d[g+4]),x=Math.max(1,o[_+10]-o[_]),M=Math.max(1,o[_+11]-o[_+1]);e.drawImage(h,d[f],d[g+4],m,y,o[_],o[_+1],x,M)}},a.Mesh.prototype._renderCanvas=function(t){this.shader.uvMatrix&&(this.shader.uvMatrix.update(),this.calculateUvs()),this.material._renderCanvas(t,this)},a.Mesh.prototype._canvasPadding=null,Object.defineProperty(a.Mesh.prototype,"canvasPadding",{get:function(){return null!==this._canvasPadding?this._canvasPadding:r.settings.MESH_CANVAS_PADDING},set:function(t){this._canvasPadding=t}}),s.SimpleMesh.prototype._renderCanvas=function(t){this.autoUpdate&&this.geometry.getBuffer("aVertexPosition").update(),this.shader.update&&this.shader.update(),this.calculateUvs(),this.material._renderCanvas(t,this)},s.SimpleRope.prototype._renderCanvas=function(t){(this.autoUpdate||this.geometry.width!==this.shader.texture.height)&&(this.geometry.width=this.shader.texture.height,this.geometry.update()),this.shader.update&&this.shader.update(),this.calculateUvs(),this.material._renderCanvas(t,this)},t.CanvasMeshRenderer=n,t}({},PIXI,PIXI,PIXI,PIXI,PIXI);Object.assign(this.PIXI,_pixi_canvas_mesh);
//# sourceMappingURL=canvas-mesh.min.js.map
